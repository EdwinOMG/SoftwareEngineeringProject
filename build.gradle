plugins {
    id 'java'
    id 'eclipse'
    id 'com.google.protobuf' version '0.9.4'
}

eclipse.project.name = 'SEProject'

// Set Java version compatibility
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17) // or your preferred version
    }
}



sourceSets {
    main {
        java {
            srcDirs = [
                'src/main/java',
                "${buildDir}/generated/source/proto/main/grpc",
                "${buildDir}/generated/source/proto/main/java"
            ]
        }
    }
test {
        java {
            // Include both the default test directory and any custom directories
            srcDirs = ['src/test/java', 'test/project/annotations']
        }
    }
}

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
    filter {
        //excludeTestsMatching "project.annotations.Assignment*"
        setFailOnNoMatchingTests(false)
    }
}

def grpcVersion = '1.59.1'
def protobufVersion = '3.25.1'
def protocVersion = protobufVersion

dependencies {
    // gRPC dependencies
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-services:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    compileOnly "org.apache.tomcat:annotations-api:6.0.53"
    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"

    // Test dependencies
    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation "io.grpc:grpc-inprocess:${grpcVersion}"
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    testImplementation 'org.mockito:mockito-core:5.11.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.11.0'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    outputSubDir = 'java'  
                }
            }
            task.plugins {
                grpc {
                    outputSubDir = 'grpc' 
                }
            }
        }
    }
    generatedFilesBaseDir = "$projectDir/build/generated/source/proto"
}

// Ensure proto generation happens before compilation
tasks.named('compileJava').configure {
    dependsOn 'generateProto'
}


